)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
high = 700
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# arrange plots in grid and save
png(file=paste(predDir,'/',specName,'.png',sep=""),width=750,height=800,)
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
while (dev.cur()>1) {dev.off()}
i=i+1
specName = str_remove(species[i],paste(modDir,'/',sep=""))
load(paste(species[i],"/",specName,'_WeeklyRegionalModel.Rdata',sep=""))
load(paste(specName,'_AlternateModel.Rdata',sep=""))
DEOpt = ((optWeekMod$null.deviance-optWeekMod$deviance)/optWeekMod$null.deviance)*100
DEAlt = ((altMod$null.deviance-altMod$deviance)/altMod$null.deviance)*100
DEchange = DEOpt - DEAlt
DEdelta[i,] = cbind(specName,round(DEchange,digits=1))
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
# clip presence to max actually possible per week for Md
if (specName=="Blainville"){
winPred[winPred>2016] = 2016
sprPred[sprPred>2016] = 2016
sumPred[sumPred>2016] = 2016
fallPred[fallPred>2016] = 2016
} else if (specName=="Kogia"){ # remove crazy predictions near land due to high Chl
winPred[winPred>29] = 0
sprPred[sprPred>29] = 0
sumPred[sumPred>29] = 0
fallPred[fallPred>29] = 0
}
# create continental mask
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
# make consistent fill limits
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
# create plots
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
hist(winPred)
hist(sprPred)
hist(sumPred)
hist(fallPred)
high = 1000
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
dev.off()
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
winPred[winPred>1000] = 1000
sprPred[sprPred>1000] = 1000
sumPred[sumPred>1000] = 1000
fallPred[fallPred>1000] = 1000
# make consistent fill limits
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# arrange plots in grid and save
png(file=paste(predDir,'/',specName,'.png',sep=""),width=750,height=800,)
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
while (dev.cur()>1) {dev.off()}
species
i=2
specName = str_remove(species[i],paste(modDir,'/',sep=""))
load(paste(species[i],"/",specName,'_WeeklyRegionalModel.Rdata',sep=""))
load(paste(specName,'_AlternateModel.Rdata',sep=""))
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
hist(winPred)
hist(sprPred)
hist(sumPred)
hist(fallPred)
winPred[winPred>350] = 350
sprPred[sprPred>350] = 350
sumPred[sumPred>350] = 350
fallPred[fallPred>350] = 350
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
# create plots
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# arrange plots in grid and save
png(file=paste(predDir,'/',specName,'.png',sep=""),width=750,height=800,)
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
while (dev.cur()>1) {dev.off()}
i=9
specName = str_remove(species[i],paste(modDir,'/',sep=""))
load(paste(species[i],"/",specName,'_WeeklyRegionalModel.Rdata',sep=""))
load(paste(specName,'_AlternateModel.Rdata',sep=""))
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
hist(winPred)
hist(sprPred)
hist(sumPred)
hist(fallPred)
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
high = 1000
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
summary(optWeekMod)
plot.gam(altMod,scale=0,all.terms=TRUE)
winPred[winPred>1000] = 1000
sprPred[sprPred>1000] = 1000
sumPred[sumPred>1000] = 1000
fallPred[fallPred>1000] = 1000
# create continental mask
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
# # get rid of any predictions in cells not deep enough for the covars in this model
# thisForm = as.character(optWeekMod$formula)[3]
# startSmooth = str_locate_all(thisForm,'s\\(')[[1]][,1]
# termInd = str_locate_all(thisForm,'\\+')[[1]][,1]
# termInd = c(0,termInd,str_length(thisForm)+1)
# allTerms = character()
# for (j in 1:length(termInd)-1){
#   thisTerm = str_sub(thisForm,start=termInd[j]+1,end=termInd[j+1]-1)
#   allTerms = c(allTerms,thisTerm)
# }
# nullTerm = str_which(allTerms,"1")
# allTerms = allTerms[-nullTerm]
# if (any(str_detect(allTerms,"700"))){
#   dLim = -800
# } else if (any(str_detect(allTerms,"400"))){
#   dLim = -500
# } else if (any(str_detect(allTerms,"200"))){
#   dLim = -300
# }
#
# winPred[which(predictWinter$Depth>dLim)] = NA
# sprPred[which(predictSpring$Depth>dLim)] = NA
# sumPred[which(predictSummer$Depth>dLim)] = NA
# fallPred[which(predictFall$Depth>dLim)] = NA
# make consistent fill limits
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# arrange plots in grid and save
png(file=paste(predDir,'/',specName,'.png',sep=""),width=750,height=800,)
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
while (dev.cur()>1) {dev.off()}
i=10
specName = str_remove(species[i],paste(modDir,'/',sep=""))
load(paste(species[i],"/",specName,'_WeeklyRegionalModel.Rdata',sep=""))
load(paste(specName,'_AlternateModel.Rdata',sep=""))
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
hist(winPred)
hist(sprPred)
hist(sumPred)
hist(fallPred)
winPred[winPred>29] = 29
sprPred[sprPred>29] = 29
sumPred[sumPred>29] = 29
fallPred[fallPred>29] = 29
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
# clip presence to max actually possible per week for Md
if (specName=="Blainville"){
winPred[winPred>2016] = 2016
sprPred[sprPred>2016] = 2016
sumPred[sumPred>2016] = 2016
fallPred[fallPred>2016] = 2016
} else if (specName%in%c("Kogia","True")){ # remove crazy predictions near land due to high Chl
winPred[winPred>29] = 0
sprPred[sprPred>29] = 0
sumPred[sumPred>29] = 0
fallPred[fallPred>29] = 0
} else if (specName%in%c("SBCD","SpermWhale")){ # cap these species to improve dynamic range of color scale
winPred[winPred>1000] = 1000
sprPred[sprPred>1000] = 1000
sumPred[sumPred>1000] = 1000
fallPred[fallPred>1000] = 1000
} else if (specName=="Cuvier"){
winPred[winPred>350] = 350
sprPred[sprPred>350] = 350
sumPred[sumPred>350] = 350
fallPred[fallPred>350] = 350
}
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
# predict presence
winPred = predict.gam(altMod,predictWinter,type="response",na.action=na.pass)
sprPred = predict.gam(altMod,predictSpring,type="response",na.action=na.pass)
sumPred = predict.gam(altMod,predictSummer,type="response",na.action=na.pass)
fallPred = predict.gam(altMod,predictFall,type="response",na.action=na.pass)
winPred[winPred>25] = 0
sprPred[sprPred>25] = 0
sumPred[sumPred>25] = 0
fallPred[fallPred>25] = 0
mask = rep(1,dim(predictWinter)[1])
mask[is.na(predictWinter$Depth)] = 0
# mask[predictWinter$Depth>-25] = 0
# set land = NA
winPred[which(mask==0)] = NA
sprPred[which(mask==0)] = NA
sumPred[which(mask==0)] = NA
fallPred[which(mask==0)] = NA
low = min(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# high = min(c(2016,max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)))
high = max(c(winPred,sprPred,sumPred,fallPred),na.rm=TRUE)
# make data frames for plotting
WinDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=winPred)
SprDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sprPred)
SumDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=sumPred)
FallDF = data.frame(y=rep(lat,length.out=length(lon)*length(lat)),
x=rep(lon,each=length(lat)),z=fallPred)
# create plots
winPlot = ggplot(WinDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Winter')
sprPlot = ggplot(SprDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Spring')
sumPlot = ggplot(SumDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Summer')
fallPlot = ggplot(FallDF,aes(x=x,y=y)
)+geom_tile(aes(fill=z)
)+scale_fill_viridis(limits=c(low,high)
)+ggtitle('Fall')
grid.arrange(winPlot,sprPlot,fallPlot,sumPlot,nrow=2,ncol=2,top=specName)
